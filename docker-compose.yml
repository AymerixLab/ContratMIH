version: '3.8'

services:
  traefik:
    image: traefik:v2.10
    container_name: traefik
    restart: unless-stopped
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge=true"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.letsencrypt.acme.email=admin@rublood.fr"
      - "--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./letsencrypt:/letsencrypt
    networks:
      - traefik-network

  db:
    image: postgres:16
    restart: unless-stopped
    environment:
      POSTGRES_USER: mih
      POSTGRES_PASSWORD: mih_password
      POSTGRES_DB: mih_staging
    volumes:
      - ./docker/db-data:/var/lib/postgresql/data
      - ./docker/init.sql:/docker-entrypoint-initdb.d/00-init.sql:ro
    networks:
      - traefik-network

  pgadmin:
    image: dpage/pgadmin4:latest
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - ./docker/pgadmin-data:/var/lib/pgadmin
    depends_on:
      - db
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.pgadmin.rule=Host(`pgadmin.rublood.fr`)"
      - "traefik.http.routers.pgadmin.entrypoints=websecure"
      - "traefik.http.routers.pgadmin.tls=true"
      - "traefik.http.routers.pgadmin.tls.certresolver=letsencrypt"
      - "traefik.http.services.pgadmin.loadbalancer.server.port=80"
    networks:
      - traefik-network

  api:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      DATABASE_URL: ${DATABASE_URL:-postgresql://mih:mih_password@db:5432/mih_staging}
      NODE_ENV: production
      PORT: ${PORT:-8080}
    depends_on:
      - db
    restart: unless-stopped
    labels:
      - "traefik.enable=true"

      # HTTP to HTTPS redirect middleware
      - "traefik.http.middlewares.https-redirect.redirectscheme.scheme=https"
      - "traefik.http.middlewares.https-redirect.redirectscheme.permanent=true"

      # HTTP router - redirects to HTTPS
      - "traefik.http.routers.mih-http.rule=Host(`mih.rublood.fr`) || Host(`mih.tetra-info.fr`)"
      - "traefik.http.routers.mih-http.entrypoints=web"
      - "traefik.http.routers.mih-http.middlewares=https-redirect"

      # HTTPS router
      - "traefik.http.routers.mih-https.rule=Host(`mih.rublood.fr`) || Host(`mih.tetra-info.fr`)"
      - "traefik.http.routers.mih-https.entrypoints=websecure"
      - "traefik.http.routers.mih-https.tls=true"
      - "traefik.http.routers.mih-https.tls.certresolver=letsencrypt"

      # Service definition
      - "traefik.http.services.mih.loadbalancer.server.port=8080"
    networks:
      - traefik-network

networks:
  traefik-network:
    driver: bridge
